<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        ABUDoHEGAAAVA6BxBgAAFQOgcQYAABUDoHEGAAAVA6BxBgAAFQOgcQYAABUDoHEGAAAVA6BxBgAAFQOg
        cQYAABUDoHEGAAAVA6BxBgAAFQOgcQYAABUDoHEGAAAVA6BxBgAAFQOgcQYAABUDoHEGAAAVA6BxBgAA
        FQOgcQYAABUDoHEGAAAVA6BxBgAAFQOgcQYAABUDoHEGAAAVA6BxBgAAFQOgcQYAABUDoHEGAAAVA6Bx
        BgAAFQOgcQYAABUDoHEGAAAVA6BxBgAAFQOgcQYAABUDoHEGAAAVA6BxBgAAFQOgcQYAABUDoHEGAAAV
        A6BxBgAAFQOgcQYAABUDoHEGAAAVA6BxBgAAFQOgcQYAABUDoHEGAAAVA6BxBgAAFQOgcQYAABUDoHEG
        AAAVA6BxBgAAFQOgcQYAABUDoHEGAAAVA6BxBgAAFQOgcQYAABUDoHEGAAAVA6BxBgAAFQOgcQYAABUD
        oHEGAAAVA6BxBgAAFQOgcQYAABUDoHEGAAAVA6BxBgAAFQOgcQYAABUDoHEGAAAVA6BxBgAAFQOgcQYA
        ABUDoHEGAAAVA6BxBgAAFQOgcQYAABUDoHEGAAAVA6BxBgAAFQOgcQYAABUDoHEGAAAVA6BxBgAAFQOg
        cQYAABUDoHEGAAAVA6BxBgAAFQOgcQYAABUDoHEGAAAVA6BxBgAAFQOgcQYAABUDoHEGAAAVA6BxBgAA
        FQOgcQYAABUDoHEGAAAVA6BxBgAAFQOgcQYAABUDoHEGAAAVA6BxBgAAFQOgcQYAABUDoHEGAAAVA6Bx
        BgAAFQOgcQYAABUDoHEGAAAVA6BxBgAAFQOgcQYAABUDoHEGAAAVA6BxBgAAFQOgcQYAABUDoHEGAAAV
        A6BxBgAAFQOgcQYAABUDoHEGAAAVA6BxBgAAFQOgcQYAABUDoHEGAAAVA6BxBgAAFQOgcQYAABUDoHEG
        AAAVA6BxBgAAFQOgcQYAABUDoHEGAAAVA6BxBgAAFQOgcQYAABUDoHEGAAAVA6BxBgAAFQOgcQYAABUD
        oHEGAAAVA6BxBgAAFQOgcQYAABUDoHEGAAAVA6BxBgAAFQOgcQYAABUDoHEGAAAVA6BxBgAAFQOgcQYA
        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
        4wNw88cd5QUAAAAASUVORK5CYII=
</value>
  </data>
</root>